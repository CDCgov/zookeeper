apiVersion: v1
kind: Template
labels:
  template: zookeeper-persistent-template
message: |-
  The following service(s) have been created in your project: ${ZOOKEEPER_SERVICE_NAME}.

   ZooKeeper Port: ${ZOOKEEPER_SERVICE_NAME}:2181
metadata:
  annotations:
    description: |-
      A distributed configuration server, with persistent storage.

      NOTE: Scaling to more than one replica is not supported. You must have persistent volumes
      available in your cluster to use this template.
    openshift.io/display-name: ZooKeeper (Persistent)
    tags: database,zookeeper
    template.openshift.io/documentation-url: https://docs.confluent.io/current/cp-docker-images/docs/intro.html
    template.openshift.io/long-description: This template provides a standalone ZooKeeper
      configuration server.  The data is stored on persistent storage.
    template.openshift.io/provider-display-name: SDP Team
    template.openshift.io/support-url: https://svcmgr.cdc.gov/
  creationTimestamp: null
  name: zookeeper-persistent
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: '${ZOOKEEPER_SERVICE_NAME}'
  spec:
    ports:
    - name: zookeeper
      protocol: TCP
      port: 2181
      targetPort: 2181
    selector:
      name: '${ZOOKEEPER_SERVICE_NAME}'
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: '${ZOOKEEPER_SERVICE_NAME}-data'
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: '${DATA_VOLUME_CAPACITY}'
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: '${ZOOKEEPER_SERVICE_NAME}-log'
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: '${LOG_VOLUME_CAPACITY}'
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: '${ZOOKEEPER_SERVICE_NAME}'
  spec:
    replicas: 1
    selector:
      name: '${ZOOKEEPER_SERVICE_NAME}'
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: '${ZOOKEEPER_SERVICE_NAME}'
      spec:
        containers:
        - capabilities: {}
          env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "${CLIENT_PORT}"
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            exec:
              command:
              - /bin/sh
              - -c
              - >-
                test `echo ruok | nc 127.0.0.1 2181` = 'imok'
            timeoutSeconds: 1
          name: zookeeper
          ports:
          - containerPort: 2181
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - >-
                test `echo ruok | nc 127.0.0.1 2181` = 'imok'
            timeoutSeconds: 1
            periodSeconds: 60
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/zookeeper/data
            name: '${ZOOKEEPER_SERVICE_NAME}-data'
          - mountPath: /var/lib/zookeeper/log
            name: '${ZOOKEEPER_SERVICE_NAME}-log'
          - mountPath: /etc/zookeeper/secrets
            name: '${ZOOKEEPER_SERVICE_NAME}-secrets'
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: '${ZOOKEEPER_SERVICE_NAME}-data'
          persistentVolumeClaim:
            claimName: '${ZOOKEEPER_SERVICE_NAME}-data'
        - name: '${ZOOKEEPER_SERVICE_NAME}-log'
          persistentVolumeClaim:
            claimName: '${ZOOKEEPER_SERVICE_NAME}-log'
        - emptyDir:
            medium: ''
          name: '${ZOOKEEPER_SERVICE_NAME}-secrets'
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - zookeeper
        from:
          kind: ImageStreamTag
          name: ${ZOOKEEPER_IMAGE}:${ZOOKEEPER_VERSION}
          namespace: ${NAMESPACE}
        lastTriggerImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  required: true
  value: 512Mi
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: ZOOKEEPER_SERVICE_NAME
  displayName: ZooKeeper Service Name
  description: The name of the OpenShift Service exposed for this instance.
  required: true
  value: zookeeper
- name: CLIENT_PORT
  displayName: ZooKeeper Client Port
  description: Tells ZooKeeper where to listen for connections by clients.
  required: true
  value: "2181"
- name: ZOOKEEPER_IMAGE
  displayName: ZooKeeper Image Name
  description: The name of the ZooKeeper ImageStream to be used.
  required: true
  value: ocp-zookeeper
- name: ZOOKEEPER_VERSION
  displayName: Version of the ZooKeeper Image
  description: Version of the ZooKeeper image to be used (stable or latest)
  required: true
  value: 3.3.x
- name: DATA_VOLUME_CAPACITY
  displayName: Data Volume Capacity
  description: The size of the volume for data, e.g. 512Mi, 2Gi.
  required: true
  value: 1Gi
- name: LOG_VOLUME_CAPACITY
  displayName: Log Volume Capacity
  description: The size of the volume for logs, e.g. 512Mi, 2Gi.
  required: true
  value: 1Gi
